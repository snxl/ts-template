version: "3.7"

services:
    database_postgres:
        image: postgres
        container_name: database_postgres
        restart: always
        ports:
            - "5432:5432"
        environment:
            - POSTGRES_USER=docker
            - POSTGRES_PASSWORD=docker
            - POSTGRES_DB=docker
        volumes:
            - pgdata:/data/postgres
        extra_hosts:
            - "host.docker.internal:172.17.0.1"

    redis:
        image: redis
        container_name: database_redis
        command: redis-server --requirepass docker
        ports:
            - "6379:6379"
        environment:
          - REDIS_REPLICATION_MODE=master
        restart: always
        volumes:
          - redis_data:/data/redis

    mongo:
        image: mongo
        container_name: database_mongo
        restart: always
        ports:
          - ${MONGO_PORT}:27017
        environment:
            - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USERNAME}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}

    app:
        build: .
        command: ["./wait-for-it.sh", "database_postgres:5432", "redis:6379", "mongo:27017", "--", "yarn", "dev"]
        container_name: node_service
        ports:
            - "3000:5050"
            - "5000:8080"
        volumes:
            - .:/usr/app
            - /usr/app/node_modules
        depends_on:
            - database_postgres
            - redis
            - mongo
        environment:
            - REDIS_HOST=redis
            - REDIS_PORT=6379
            - REDIS_PASSWORD=docker
            - DB_URL=postgresql://docker:docker@database_postgres:5432/docker
            - MONGO_URL://${MONGO_USERNAME}:${MONGO_PASSWORD}@${MONGO_HOST}/${MONGO_DATABASE}
        logging:
            driver: "json-file"
            options:
                max-size: "10m"
                max-file: "5"

volumes:
    pgdata:
        driver: local
    redis_data:
        driver: local
